{"version":3,"file":"static/js/416.594374d1.chunk.js","mappings":"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","sources":["components/Card.jsx","components/Loader.jsx","components/Trending.jsx","pages/HomePage.jsx","services/APIservices.js"],"sourcesContent":["import { BsFileImage } from 'react-icons/bs';\n\nconst Card = ({ movie }) => {\n  return (\n    <>\n      <div> {movie.name || movie.original_title}</div>\n      {movie.poster_path ? (\n        <img\n          alt={movie.name || movie.original_title}\n          src={`http://image.tmdb.org/t/p/w200${movie.poster_path}`}\n        />\n      ) : (\n        <BsFileImage />\n      )}\n    </>\n  );\n};\n\nexport default Card;\n","import { Audio } from 'react-loader-spinner';\n\nexport default function Loader() {\n  return (\n    <Audio\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"green\"\n      ariaLabel=\"loading\"\n      wrapperStyle\n      wrapperClass\n    />\n  );\n}\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport { toast } from 'react-toastify';\nimport { useState, useEffect } from 'react';\nimport { getMoviesAPI } from 'services/APIservices';\nimport { Link } from 'react-router-dom';\nimport Card from './Card';\nimport Loader from './Loader';\n\nconst moviesAPI = getMoviesAPI();\n\nconst Trending = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    moviesAPI\n      .getTrendingMovies()\n      .then(res => {\n        if (res.length === 0) {\n          throw Error();\n        }\n        setMovies(res);\n        return;\n      })\n      .catch(error => {\n        setError(true);\n        console.log(error);\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  if (error) {\n    toast.error('Sorry, something went wrong. Please try again.', {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    });\n  }\n\n  if (loading) {\n    return (\n      <>\n        <h1>Trending list is loading...</h1>\n        <Loader />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <ul>\n        {movies.map(movie => {\n          const nanoId = nanoid();\n          return (\n            <Link key={nanoId} to={`movies/${movie.id}`}>\n              <Card movie={movie} />\n            </Link>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Trending;\n","import Trending from 'components/Trending';\n\nconst Home = () => {\n  return (\n    <>\n      <div>Home Page</div>\n      <Trending />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nimport { Notify } from 'notiflix';\n\nconst API_KEY = '713e88f7db14c265e0543f2dd0843d0c';\n\nconst API_ENDPOINTS = {\n  baseURL: 'https://api.themoviedb.org/3/',\n  trending_URL: 'trending/all/day',\n  Movie_URL: 'search/movie',\n  Details_URL: 'movie/{movie_id}',\n  Actors_URL: 'movie/{movie_id}/credits',\n  Reviews_URL: 'movie/{movie_id}/reviews',\n};\n\naxios.defaults.baseURL = API_ENDPOINTS.baseURL;\n\nconst getTrendingMovies = async () => {\n  try {\n    const result = await axios.get(API_ENDPOINTS.trending_URL, {\n      params: { api_key: API_KEY, language: 'en-US' },\n    });\n\n    return result.data.results;\n  } catch (error) {\n    Notify.failure('Sorry, something went wrong. Please try again.');\n    throw new Error(error.response.data.message);\n  }\n};\n\nconst getMovieBySearch = async query => {\n  try {\n    const result = await axios.get(API_ENDPOINTS.Movie_URL, {\n      params: { api_key: API_KEY, language: 'en-US', query: query },\n    });\n    return result.data.results;\n  } catch (error) {\n    Notify.failure('Sorry, something went wrong. Please try again.');\n    throw new Error(error.response.data.message);\n  }\n};\n\nconst getOneMovie = async id => {\n  try {\n    const result = await axios.get(`movie/${id}`, {\n      params: { api_key: API_KEY, language: 'en-US' },\n    });\n    return result.data;\n  } catch (error) {\n    Notify.failure(`Sorry, we can't find any information about this movie :(`);\n    throw new Error(error.response.data.message);\n  }\n};\n\nconst getActors = async id => {\n  try {\n    const result = await axios.get(`movie/${id}/credits`, {\n      params: { api_key: API_KEY, language: 'en-US' },\n    });\n    return result.data.cast;\n  } catch (error) {\n    Notify.failure(`Sorry, we can't find this actor.`);\n    throw new Error(error.response.data.message);\n  }\n};\n\nconst getReviews = async id => {\n  try {\n    const result = await axios.get(`movie/${id}/reviews`, {\n      params: { api_key: API_KEY, language: 'en-US' },\n    });\n    return result.data.results;\n  } catch (error) {\n    Notify.failure(`Sorry, no one has written a review yet.`);\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getMoviesAPI = () => {\n  return {\n    getTrendingMovies,\n    getMovieBySearch,\n    getOneMovie,\n    getActors,\n    getReviews,\n  };\n};\n"],"names":["movie","name","original_title","poster_path","alt","src","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","moviesAPI","getMoviesAPI","useState","movies","setMovies","loading","setLoading","error","setError","useEffect","getTrendingMovies","then","res","length","Error","catch","console","log","finally","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","map","nanoId","nanoid","to","id","Card","API_KEY","API_ENDPOINTS","axios","params","api_key","language","result","data","results","Notify","response","message","getMovieBySearch","query","getOneMovie","getActors","cast","getReviews"],"sourceRoot":""}